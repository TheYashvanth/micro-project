import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt
import pandas as pd
# Load FER2013 dataset url =
"https://raw.githubusercontent.com/muxspace/facial_expressions/master/data/legend.csv" data = pd.read_csv(url)
# Preprocess the dataset data["emotion"] = data["emotion"].map({0: "Angry"
, 1: "Disgust"
, 2: "Fear"
, 3: "Happy"
, 4: "Sad"
, 5: "Surprise"
, 6: "Neutral"})
# Create data generators
train_datagen = ImageDataGenerator(rescale=1./255, validation_split=0.2)
train_generator = train_datagen.flow_from_dataframe( dataframe=data, directory=None, x_col=
"image"
, y_col=
"emotion"
, subset=
"training"
, batch_size=32, seed=42, shuffle=True, class_mode=
"categorical"
,
target_size=(48, 48)
)
validation_generator = train_datagen.flow_from_dataframe( dataframe=data, directory=None, x_col=
"image"
, y_col=
"emotion"
, subset=
"validation"
, batch_size=32, seed=42, shuffle=True, class_mode=
"categorical"
,
target_size=(48, 48)
# Train the model history = model.fit(train_generator, epochs=10, validation_data=validation_generator) # Plot training history
plt.plot(history.history['accuracy'], label=
'Training Accuracy') plt.plot(history.history['val_accuracy'], label=
'Validation Accuracy')
plt.xlabel('Epoch') 
plt.ylabel('Accuracy')
plt.legend() plt.show()
